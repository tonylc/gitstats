<% content_for :head do %>
<style>
  .graph-container {
    position: relative;
    margin: 2em;;
  }
  #svg-container {
    padding: 2em;
  }
  .stats {
    position: absolute;
    top: 2em;
    left: 3em;
  }
  path {
    stroke-width: 2;
    fill: none;
  }
  line {
    stroke: black;
  }
  text {
    font-family: Arial;
    font-size: 9pt;
  }
  .html {
    color: red;
  }
  .rb {
    color: green;
  }
  .css {
    color: blue;
  }
  .js {
    color: yellow;
  }
  .lang-type {
    font-weight: bold;
  }
  .axis {
    stroke: #000;
  }
</style>
<% end %>
<div class="graph-container">
  <div class="stats"></div>
  <svg id="svg-container"></svg>
</div>

<% content_for :script do %>
<%# <script src="http://d3js.org/d3.v2.min.js"></script> %>
<script src="http://d3js.org/d3.v2.js"></script>
<script>
  var rawStats = '<%= @commit_stats.values.to_json.html_safe %>';
  var rawDateStats = '<%= @commit_dates.as_json.to_json.html_safe %>';
  var chart = {
    w: 800,
    h: 400,
    days: 30,
    maxLines: 200,
    maxDate: new Date(2013,3,3),
    colors: ['red', 'green', 'blue', 'yellow', 'grey']
  }
  function getCopyOfDate(date) {
    return new Date(date.getTime());
  }
  <%# stats for all commits for a particular language on a given date %>
  var Stat = function(date, added, deleted) {
    this.date = date;
    this.added = added;
    this.deleted = deleted;
    var self = this;
    this.totalLines = function() {
      return self.added + self.deleted;
    };
    this.addToPlusCount = function(count) {
      self.added += count;
    };
    this.addToMinusCount = function(count) {
      self.deleted += count;
    };
  }
  <%# all commits for a given user for a given date %>
  var Commit = function(type, statsArr) {
    this.type = type;
    this.statsArr = statsArr;
    this.stats = $.map(new Array(chart.days), function(el, i) {
      var d = getCopyOfDate(chart.maxDate);
      d.setDate(d.getDate()-i);
      return new Stat(d,0,0);
    });
    var self = this;
    this.initializeStats = function() {
      $.each(statsArr, function(i, el) {
        var today = getCopyOfDate(chart.maxDate);
        var date = new Date(el[0]);
        var timeInMillis = today.getTime() - date.getTime();
        var daysAgo = Math.ceil(timeInMillis / (1000 * 60 * 60 * 24));
        self.stats[daysAgo].addToPlusCount(el[1]);
        self.stats[daysAgo].addToMinusCount(el[2]);
      });
    }
    this.initializeStats();
  }
  var CommitType = function(langType, added, deleted) {
    this.langType = langType;
    this.added = parseInt(added);
    this.deleted = parseInt(deleted);
    this.total = parseInt(added) + parseInt(deleted);
  }
  var CommitStat = function(dateStr, statsHash) {
    this.date = new Date(dateStr);
    this.statsHash = statsHash;
    this.languages = [];
    var self = this;
    $.each(statsHash, function(langType, countStr) {
      self.languages.push(new CommitType(langType, countStr.split(",")[0], countStr.split(",")[1]));
    });
    this.languageStr = $.map(this.languages, function(el, i) {
      return '<span class="' + el.langType + ' lang-type">' + convertLanguageTypeToLanguageText(el.langType) + '</span>' + ": " + el.total;
    }).join(" ");

    function convertLanguageTypeToLanguageText(langType) {
      switch(langType) {
        case "rb":
          return "Ruby";
        case "html":
          return "HTML";
        case "css":
          return "CSS";
        case "js":
          return "Javascript";
        default:
          return "Unknown";
      }
    }
  }
  var statsByDate = [];
  var minDate = getCopyOfDate(chart.maxDate);
  minDate.setDate(chart.maxDate.getDate()-30);
  var currentDate = getCopyOfDate(chart.maxDate);

  $.each(JSON.parse(rawDateStats), function(i, el) {
    var date = new Date(el[0]);
    while (currentDate > date) {
      <%# add empty commits until we get to current date %>
      statsByDate.push(new CommitStat(currentDate, []));
      currentDate.setDate(currentDate.getDate() - 1);
    }
    statsByDate.push(new CommitStat(date, el[1]));
    <%# ensure that we properly increment counters when we push dates with commits %>
    currentDate.setDate(currentDate.getDate() - 1);
  });
  <%# ensure we fill data until we reach min date %>
  while (currentDate >= minDate) {
    statsByDate.push(new CommitStat(currentDate, []));
    currentDate.setDate(currentDate.getDate() - 1);
  }
  var stats = $.map(JSON.parse(rawStats), function(el, i) {
    return new Commit(el[0], el[1]);
  });

  var svg = d3.select('svg')
    .attr('width', chart.w)
    .attr('height', chart.h);

  margin = 10,
  y = d3.scale.linear().domain([0, chart.maxLines]).range([0 + margin, chart.h - margin]),
  x = d3.time.scale().domain([minDate, chart.maxDate]).range([0 + margin, chart.w - margin])

  var g = svg.append("svg:g")
      .attr("transform", "translate(0, " + (chart.h + margin) + ")");

  <%# draw the colored line %>
  $.each(stats, function(i, el) {
    console.log('i',i,el.type,el,chart.colors[i]);
    var line = d3.svg.line()
        .x(function(d,i) { return x(d.date); })
        .y(function(d) { return -1 * y(d.totalLines()); })
    g.append("svg:path")
      .attr("d", line(el.stats.reverse()))
      .attr('stroke', function(d) { return chart.colors[i]; });
  });

  <%# draw grid %>
  g.selectAll("line.x")
    .data(x.ticks(10))
    .enter()
    .append("line")
    .attr("x1", x)
    .attr("x2", x)
    .attr("y1", -1 * y(0))
    .attr("y2", -1 * y(chart.maxLines))
    .style("stroke", "#ccc");

  g.selectAll("line.y")
    .data(y.ticks(10))
    .enter()
    .append("line")
    .attr("x1", x(minDate))
    .attr("x2", x(chart.maxDate))
    .attr("y1", function(d) { return -1 * y(d); })
    .attr("y2", function(d) { return -1 * y(d); })
    .style("stroke", "#ccc");

  <%# draw x-axis %>
  g.append("line")
    .attr('class', 'axis')
    .attr("x1", x(minDate))
    .attr("y1", -1 * y(0))
    .attr("x2", x(chart.maxDate))
    .attr("y2", -1 * y(0));

  <%# draw y-axis %>
  g.append("line")
    .attr('class', 'axis')
    .attr("x1", x(minDate))
    .attr("y1", -1 * y(0))
    .attr("x2", x(minDate))
    .attr("y2", -1 * y(chart.maxLines));

  <%# draw labels %>
  var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")
    .tickFormat(d3.time.format("%m/%d/%Y"))
    .ticks(5);
  svg.append("g")
    .attr("class", "x-axis")
    .attr("transform", "translate(0," + (chart.h) + ")")
    .call(xAxis);

  var oneDayLessThanMin = getCopyOfDate(chart.maxDate);
  oneDayLessThanMin.setDate(chart.maxDate.getDate()-30);
  g.selectAll(".yLabel")
    .data(y.ticks(10))
    .enter().append("svg:text")
    .attr("class", "yLabel")
    .text(String)
    .attr('text-anchor', 'end')
    .attr("x", 0)
    .attr("y", function(d) { return -1 * y(d) })
    .attr("dy", 4);

  <%# draw the commit lines %>
  $.each(statsByDate, function(i, el) {
    g.append("line")
      .attr("stroke-width", 7)
      .attr("opacity", 0)
      .attr("x1", x(el.date))
      .attr("y1", -1 * y(0))
      .attr("x2", x(el.date))
      .attr("y2", -1 * y(chart.maxLines))
      .on("mouseover", function() {
        var d = new Date(el.date.getTime());
        var curr_date = d.getDate();
        var curr_month = d.getMonth() + 1; //Months are zero based
        var dateStr = d.getFullYear() + "/" + (d.getMonth() + 1) + "/" + d.getDate();
        $('.stats').html(dateStr + ": " + el.languageStr);
      });
  });

</script>
<% end %>